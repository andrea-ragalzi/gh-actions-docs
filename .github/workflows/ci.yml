name: CI/CD Pipeline

# ðŸ”‘ dai al token i permessi strettamente necessari
permissions:
  contents: write   # consente il push su gh-pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true  # lascia il token nei credential helper

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: snok/install-poetry@v1

      - name: Cache Poetry & pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-ansi

      - run: poetry run flake8 gh_actions_docs/src/main.py
        name: Lint code

      - run: poetry run pytest tests -q
        name: Run tests

      - run: poetry run mkdocs build
        name: Build docs

      # ðŸ“š Deploy con lâ€™action dedicata
      - name: Deploy GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}   # usa il token con write
          publish_dir: ./site